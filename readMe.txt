项目开发规范:
	为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档.本规范文档一经确认, 
	前后端开发人员必须按本文档规范进行前台页面开发. 本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.
一、项目目录结构：
	
	
	
    ①. webapp下文件结构：
   
	---
     |----- css/					CSS样式
     |----- ext/					ext类库，用于后台系统的开发
     |----- images/					图片文件夹	   
     |----- manage/    				后台管理目录
     		   |-----
     		   |-----
     		   |-----
     		   |-----
     		   |-----
     		   |----- login.jsp      		后台登陆页面
     |----- SyntaxHighlighter/		代码高亮插件
     |
     


二、web前后端开发规范文档：


	文件规范
	
	1. jsp文件命名：英文命名,后缀.jsp 。
	2. css文件命名：英文命名,后缀.css 。共用base.css,reset.css,首页index.css，登陆页面login.css.其他页面根据实际模块命名
	3. Js 文件命名： 英文命名,后缀.js . 共用common.js,其他依据实际模块需求命名。
	
	jsp/html书写规范
	
	1. 文档类型声明及编码: 统一为html5声明类型<!DOCTYPE html>; 编码统一为utf-8, 书写时利用IDE实现层次分明的缩进.
	2. 非特殊情况下样式和js文件必须外链至<head>...</head>之间;
	3. 引入样式文件或JavaScript文件时, 须略去默认类型声明, 写法如下:
				<link rel="stylesheet" href="..." />
				<style>...</style>
				<script src="..."></script>
	4. 引入JS库文件, 文件名须包含库名称及版本号及是否为压缩版, 比如jquery-1.4.1.min.js; 引入插件, 文件名格式为库名称+插件名称, 比如jQuery.cookie.js;
	5. 在页面中尽量避免使用style属性,即style="…";
    6. 能以背景形式呈现的图片, 尽量写入css样式中;
    7. 重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;
    8. 给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;
    9. 书写页面过程中, 请考虑向后扩展性;
   10. class & id 参见 css书写规范.
   
   css书写规范
   
   1. 编码统一为utf-8;
   2. 协作开发及分工: I会根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&表现&行为; 共用css文件base.css由I书写, 
   	     协作开发过程中, 每个页面请务必都要引入, 此文件包含reset及头部底部样式, 此文件不可随意修改;
   	
   	
   
   
   JavaScript书写规范

	1. 文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || ...);
	2. 库引入: 原则上仅引入jQuery库, 若需引入第三方库, 须与团队其他人员讨论决定;
	3. 变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写, 如iTaoLun;
		jQuery变量要求首字符为'_', 其他与原生JavaScript 规则相同, 如: _iTaoLun;另, 要求变量集中声明, 避免全局变量.
	4. 类命名: 首字母大写, 驼峰式命名. 如 ITaoLun;
	5. 函数命名: 首字母小写驼峰式命名. 如iTaoLun();
	6. 命名语义化, 尽可能利用英文单词或其缩写;
	7. 尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval_r() & innerText;
	8. 后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;
	9. 代码结构明了, 加适量注释. 提高函数重用率;
   10. 注重与html/JSP分离, 减小reflow, 注重性能.
   
         图片规范

	1. 所有页面元素类图片均放入img文件夹, 测试用图片放于img/demoimg文件夹;
	2. 图片格式仅限于gif || png || jpg;	
	3. 命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, 比如ad_left01.gif || btn_submit.gif;
	4. 在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;
	5. 尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);
	6. 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.


   	 注释规范
  
	1. html/JSP注释: 注释格式 <!--这儿是注释-->, '--'只能在注释的始末位置,不可置入注释文字区域;
	2. css注释: 注释格式 ;
	3. JavaScript注释, 单行注释使用'//这儿是单行注释' ,多行注释使用 ;
    
  	其他规范

	1. 开发过程中严格按分工完成页面, 以提高css复用率, 避免重复开发;
	2. 减小沉冗代码, 书写所有人都可以看的懂的代码. 简洁易懂是一种美德. 为用户着想, 为服务器着想.
	
	
	
	

本团队介绍
1、本团队项目骨架参考了Springside3.3.4的项目骨架。
2、本团队为一个初级团队大家都在成长希望大家能一直坚持下去。
3、本团队依赖的Parent‘s POM将在后面托管到GitHub之上。
4、本团队后期开发一个博客产品，期待中。
添加的第三方组件备注：
1、前台代码格式化高亮JS组件：http://code.google.com/p/syntaxhighlighter/
	说明：相关的依赖JS、CSS文件已添加到webapp/SyntaxHighlighter/下。
	DEMO:页面highlighter.jsp【可参考】